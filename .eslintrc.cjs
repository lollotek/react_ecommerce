module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
    'plugin:prettier/recommended',
    'prettier',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parser: '@typescript-eslint/parser',
  plugins: ['react-refresh'],
  rules: {
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
    'no-console': 'warn',
  'react-hooks/rules-of-hooks': 'warn',
  'react-hooks/exhaustive-deps': 'warn',
  'no-param-reassign': 'warn',
  'react/prop-types': 0,
  'react/no-unescaped-entities': 0,
  'react/no-string-refs': 'warn',
  'react/no-find-dom-node': 'warn',
  'camelcase': 0,
  'no-bitwise': 'warn',
  'react/button-has-type': 'warn',
  'react/destructuring-assignment': 'warn',
  'react/forbid-prop-types': 0,
  'react/jsx-boolean-value': 0,
  'react/jsx-curly-brace-presence': 'warn',
  'react/jsx-filename-extension': [
    1,
    {
      extensions: ['.jsx', '.tsx'],
    },
  ],
  'react/jsx-props-no-spreading': 0,
  'react/no-access-state-in-setstate': 'warn',
  'react/no-array-index-key': 'warn',
  'react/no-danger': 'warn',
  'react/no-deprecated': 'warn',
  'react/no-did-update-set-state': 'warn',
  'react/no-unused-prop-types': 'warn',
  'react/no-unused-state': 'warn',
  'react/no-will-update-set-state': 'warn',
  'react/prefer-stateless-function': 'warn',
  'react/require-default-props': 0,
  'react/sort-comp': 'warn',
  'react/state-in-constructor': 'warn',
  'no-undef': 0,
  'no-redeclare': 'warn',
  'no-useless-escape': 'warn',
  'no-prototype-builtins': 'warn',
  'prefer-arrow-callback': 0,
  'react/react-in-jsx-scope': 0,
  'unused-imports/no-unused-vars': [
    'warn',
    {
      vars: 'all',
      args: 'after-used',
      ignoreRestSiblings: true,
    },
  ],
  'unused-imports/no-unused-imports': 'error',
  '@typescript-eslint/no-unused-vars': [
    'error',
    {
      varsIgnorePattern: '^_',
    },
  ],
  'react/self-closing-comp': 'error',
  'import/first': 'error',
  'import/order': 'error',
  'import/newline-after-import': 'error',
  },
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: ['./tsconfig.json', './tsconfig.node.json'],
    tsconfigRootDir: __dirname,
  },
}